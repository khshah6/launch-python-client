:orphan:

:py:mod:`launch.clientlib.model_service.types`
==============================================

.. py:module:: launch.clientlib.model_service.types


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   launch.clientlib.model_service.types.InferenceService
   launch.clientlib.model_service.types.Processor




.. py:class:: InferenceService



   A service that operates on single requests.

   NOTE: This is the "batteries included" service.


.. py:class:: Processor



   Abstract base class for generic types.

   A generic type is typically declared by inheriting from
   this class parameterized with one or more type variables.
   For example, a generic mapping type might be defined as::

     class Mapping(Generic[KT, VT]):
         def __getitem__(self, key: KT) -> VT:
             ...
         # Etc.

   This class can then be used as follows::

     def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:
         try:
             return mapping[key]
         except KeyError:
             return default


